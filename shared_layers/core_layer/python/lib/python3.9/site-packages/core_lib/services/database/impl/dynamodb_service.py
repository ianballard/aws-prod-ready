import boto3
from core_lib.services.parameter.parameter_service import (
    get_parameter_value,
    ParameterName,
)
from boto3.dynamodb.types import TypeDeserializer
from core_lib.utils.args_util import get_non_null_kwargs

dynamodb_resource = boto3.resource("dynamodb")
dynamodb_client = boto3.client("dynamodb")

DB_TABLE = None


def db_table():
    global DB_TABLE

    if DB_TABLE is None:
        DB_TABLE = dynamodb_resource.Table(get_parameter_value(ParameterName.DB_TABLE))

    return DB_TABLE


def dynamodb_json_to_json(dynamodb_json):
    deserializer = TypeDeserializer()
    normal_json = {
        key: deserializer.deserialize(record) for key, record in dynamodb_json.items()
    }
    return normal_json


def put_item(**kwargs):
    db_response = db_table().put_item(**get_non_null_kwargs(**kwargs))
    return db_response


def query_items(**kwargs):
    db_response = db_table().query(**get_non_null_kwargs(**kwargs))
    return db_response


def get_item(**kwargs):
    db_response = db_table().get_item(**get_non_null_kwargs(**kwargs))
    return db_response.get("Item")


def update_item(**kwargs):
    db_response = db_table().update_item(**get_non_null_kwargs(**kwargs))
    return db_response


def delete_item(**kwargs):
    db_response = db_table().delete_item(**get_non_null_kwargs(**kwargs))
    return db_response
