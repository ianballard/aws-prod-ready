import base64
import gzip
import json

import boto3

from core_lib.utils.log_util import log_info, log_unexpected_exception

logs_client = boto3.client("logs")


def log_subscribed_log_events(event):
    compressed_data = base64.b64decode(event["awslogs"]["data"])
    decompressed_data = gzip.decompress(compressed_data)

    # Convert the decompressed data to a JSON object
    log_data = json.loads(decompressed_data)

    # Extract log events from the log data
    log_events = log_data["logEvents"]

    # Process each log event
    for log_event in log_events:
        try:
            print(json.loads(json.dumps(log_event.get("message"))))
        except Exception as e:
            log_unexpected_exception(e)


def put_subscription_filter(
    log_group: str, filter_name: str, destination_arn: str, filter_pattern: str
):
    try:
        log_info(
            f"{log_group} put_subscription_filter: {filter_name} to {destination_arn}"
        )
        logs_client.put_subscription_filter(
            logGroupName=log_group,
            filterName=filter_name,
            filterPattern=filter_pattern,
            destinationArn=destination_arn,
        )
    except logs_client.exceptions.ResourceNotFoundException:
        return
    except Exception as e:
        log_unexpected_exception(e)
        return
