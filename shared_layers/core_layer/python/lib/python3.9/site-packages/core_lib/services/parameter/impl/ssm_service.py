import os

import boto3
from core_lib.utils.log_util import log_warning

ssm_client = boto3.client("ssm")
ssm_client_replica_region = boto3.client("ssm", region_name=os.getenv("REPLICA_REGION"))

PARAMETER_VALUES = {}


def get_parameter_value(
    parameter_name, with_decryption: bool = None, region=os.getenv("region")
):
    parameter_name_str = parameter_name.value

    client = SSM_CLIENT.get(region)
    if not client:
        log_warning(
            f"Unsupported region: {region}, supported regions: {list(SSM_CLIENT.keys())}. using default client"
        )
        client = ssm_client

    if parameter_name_str not in PARAMETER_VALUES:
        client_args = {"Name": parameter_name_str}
        if with_decryption is not None:
            client_args["WithDecryption"] = with_decryption

        client_response = client.get_parameter(**client_args)
        value = client_response.get("Parameter", {}).get("Value")
        PARAMETER_VALUES[parameter_name_str] = value

    return PARAMETER_VALUES[parameter_name_str]


SSM_CLIENT = {
    os.getenv("region"): ssm_client,
    os.getenv("REPLICA_REGION"): ssm_client_replica_region,
}
