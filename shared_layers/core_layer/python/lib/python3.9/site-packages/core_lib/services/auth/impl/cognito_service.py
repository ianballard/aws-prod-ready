from core_lib.services.parameter.parameter_service import get_parameter_value, ParameterName
import boto3
import base64
import hashlib
import hmac
from core_lib.utils.log_util import log_function_call

cognito_idp_client = boto3.client('cognito-idp')

USER_POOL_ID = None
USER_POOL_CLIENT = None


def get_user_pool_id():
    global USER_POOL_ID

    if USER_POOL_ID is None:
        USER_POOL_ID = get_parameter_value(ParameterName.USER_POOL_ID)

    return USER_POOL_ID


def get_user_pool_client():
    global USER_POOL_CLIENT

    if USER_POOL_CLIENT is None:
        USER_POOL_CLIENT = get_parameter_value(ParameterName.USER_POOL_CLIENT)

    return USER_POOL_CLIENT


def get_app_client_secret():
    client_response = cognito_idp_client.describe_user_pool_client(
        UserPoolId=get_user_pool_id(),
        ClientId=get_user_pool_client()
    )
    return client_response.get('UserPoolClient', {}).get('ClientSecret')


def get_cognito_client_secret_hash(username):
    message = bytes(username + get_user_pool_client(), 'utf-8')
    key = bytes(get_app_client_secret(), 'utf-8')
    return base64.b64encode(hmac.new(key, message, digestmod=hashlib.sha256).digest()).decode()


def sign_up(email: str, password: str, first_name: str, last_name: str):
    email = email.lower()
    client_id = get_user_pool_client()
    user_pool_id = get_user_pool_id()
    signup_response = cognito_idp_client.sign_up(
        ClientId=client_id,
        SecretHash=get_cognito_client_secret_hash(email),
        Username=email,
        Password=password,
        UserAttributes=[
            {
                'Name': 'email',
                'Value': email
            },
            {
                'Name': 'given_name',
                'Value': first_name
            },
            {
                'Name': 'family_name',
                'Value': last_name
            }
        ])

    cognito_client.admin_add_user_to_group(
        UserPoolId=user_pool_id,
        Username=email,
        GroupName='User'
    )

    return signup_response

@log_function_call
def initiate_user_password_auth(username: str, password: str):
    auth_response = cognito_idp_client.initiate_auth(
        AuthFlow='USER_PASSWORD_AUTH',
        AuthParameters={
            "USERNAME": username,
            "PASSWORD": password,
            "SECRET_HASH": get_cognito_client_secret_hash(username)
        },
        ClientId=get_user_pool_client(),
    )
    return auth_response