from core_lib.services.database.impl import dynamodb_service
from core_lib.data_access.impl.dynamodb.base_dynamodb_data_model import DynamoDBItem


class BaseDynamoDBRepository:
    def __init__(self, data_model: DynamoDBItem):
        self.db_service = dynamodb_service
        self.data_model = data_model

    def put_item(self, item):
        return self.db_service.put_item(item=item, data_model=self.data_model)

    def get_item(self, key, projection_expression: str = None):
        return self.db_service.get_item(
            Key=key, ProjectionExpression=projection_expression
        )

    def update_item(self, key, updates: dict):
        return self.db_service.update_item(
            key=key, updates=updates, data_model=self.data_model
        )

    def delete_item(self, key):
        return self.db_service.delete_item(Key=key)

    def soft_delete_item(self, key):
        return self.db_service.update_item(
            key=key, updates={"is_deleted": True}, data_model=self.data_model
        )

    def query(self, **kwargs):
        return self.db_service.query_items(**kwargs)

    def batch_get_item(self, **kwargs):
        return self.db_service.batch_get_item(**kwargs)
