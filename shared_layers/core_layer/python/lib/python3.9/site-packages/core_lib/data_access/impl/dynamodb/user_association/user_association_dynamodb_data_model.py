from core_lib.data_access.entity_type import EntityType
from core_lib.data_access.impl.dynamodb.user.user_dynamodb_data_model import (
    build_formatted_user_id,
)
from core_lib.data_access.impl.dynamodb.base_dynamodb_data_model import (
    BASE_DYNAMODB_DATA_MODEL_SCHEMA,
    DynamoDBItem,
)
from core_lib.services.database.impl.dynamodb_service import build_new_item
from core_lib.utils.json_schema_util import (
    get_schema_validator,
    JSON_SCHEMA_2020_12_DRAFT,
    BOOLEAN,
    UUID_PATTERN,
)

USER_ASSOCIATION_ENTITY_TYPE = EntityType.UserAssociation


USER_ASSOCIATION_DATA_MODEL_SCHEMA = {
    **BASE_DYNAMODB_DATA_MODEL_SCHEMA,
    "title": "UserAssociationDataModel",
    "type": "object",
    "properties": {
        **BASE_DYNAMODB_DATA_MODEL_SCHEMA["properties"],
        "pk": {
            "type": "string",
            "pattern": f"^{EntityType.User.value}-{UUID_PATTERN}$",
        },
        "sk": {
            "type": "string",
            "pattern": f"^{EntityType.User.value}-{UUID_PATTERN}$",
        },
        "entity_type": {"const": EntityType.UserAssociation.value},
    },
}

USER_ASSOCIATION_JSON_SCHEMA_VALIDATOR = None


USER_ASSOCIATION_ALLOWED_UPDATES_SCHEMA = {
    **JSON_SCHEMA_2020_12_DRAFT,
    "title": "UserAllowedUpdatesDataModel",
    "type": "object",
    "properties": {
        "is_deleted": BOOLEAN,
    },
    "additionalProperties": False,
}

USER_ASSOCIATION_ALLOWED_UPDATES_JSON_SCHEMA_VALIDATOR = None


def get_user_association_json_schema_validator():
    global USER_ASSOCIATION_JSON_SCHEMA_VALIDATOR

    if USER_ASSOCIATION_JSON_SCHEMA_VALIDATOR is None:
        USER_ASSOCIATION_JSON_SCHEMA_VALIDATOR = get_schema_validator(
            schema=USER_ASSOCIATION_DATA_MODEL_SCHEMA
        )

    return USER_ASSOCIATION_JSON_SCHEMA_VALIDATOR


def get_user_association_allowed_updates_json_schema_validator():
    global USER_ASSOCIATION_ALLOWED_UPDATES_JSON_SCHEMA_VALIDATOR

    if USER_ASSOCIATION_ALLOWED_UPDATES_JSON_SCHEMA_VALIDATOR is None:
        USER_ASSOCIATION_ALLOWED_UPDATES_JSON_SCHEMA_VALIDATOR = get_schema_validator(
            schema=USER_ASSOCIATION_ALLOWED_UPDATES_SCHEMA
        )

    return USER_ASSOCIATION_ALLOWED_UPDATES_JSON_SCHEMA_VALIDATOR


def build_new_user_association(user_association: dict):
    user = {
        "pk": build_formatted_user_id(user_association["user_a_id"]),
        "sk": build_formatted_user_id(user_association["user_b_id"]),
        "entity_type": USER_ASSOCIATION_ENTITY_TYPE.value,
    }
    return build_new_item(user)


class UserAssociationDynamoDBItem(DynamoDBItem):
    def __init__(self):
        super().__init__(
            new_item_builder=build_new_user_association,
            put_item_validator=get_user_association_json_schema_validator(),
            update_item_validator=get_user_association_allowed_updates_json_schema_validator(),
        )
