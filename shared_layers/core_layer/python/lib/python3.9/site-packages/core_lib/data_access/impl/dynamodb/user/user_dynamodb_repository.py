from core_lib.data_access.impl.dynamodb.user.user_dynamodb_data_model import (
    UserDynamoDBItem,
    build_user_item_key,
)
from core_lib.data_access.impl.dynamodb.base_dynamodb_repository import (
    BaseDynamoDBRepository,
)


class UserDynamoDBRepository(BaseDynamoDBRepository):
    def __init__(self):
        super().__init__(data_model=UserDynamoDBItem())

    def find_user_by_id(self, _id: str, projection_expression: str = None):
        return self.get_item(
            key=build_user_item_key(_id=_id),
            projection_expression=projection_expression,
        )

    def delete_user_by_id(self, _id: str):
        return self.soft_delete_item(key=build_user_item_key(_id=_id))

    def create_user(self, user):
        return self.put_item(item=user)

    def update_user(self, _id: str, updates: dict):
        key = build_user_item_key(_id=_id)
        return self.update_item(key=key, updates=updates)
