import logging
import json


logger = logging.getLogger()
logger.setLevel(logging.INFO)


def make_boto3_request(func, args):

    # Check if the KeyConditionExpression parameter is present
    if 'KeyConditionExpression' in args:
        # Convert the KeyConditionExpression to a string
        args['KeyConditionExpression'] = str(args['KeyConditionExpression'])

    # Check if the FilterExpression parameter is present
    if 'FilterExpression' in args:
        # Convert the FilterExpression to a string
        args['FilterExpression'] = str(args['FilterExpression'])

    print({
        'log_type': 'access',
        'principle': None,
        'request_context': {},
        'event_type': 'aws_service_request',
        'event_context': {
            'request_type': func.__name__,
            'request_params': json.dumps(args)
        }
    })

    # Call the boto3 function with the args
    return func(**args)


def log_info(message):
    logger.info(message)


def log_warning(message):
    logger.warning(message)


def log_error(message):
    logger.error(message)


def log_exception(message):
    logger.exception(message)


def log_unexpected_exception(message):
    logger.exception('UNEXPECTED_EXCEPTION: ' + message)
