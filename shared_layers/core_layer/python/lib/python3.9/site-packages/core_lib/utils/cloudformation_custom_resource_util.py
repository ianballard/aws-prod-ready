import json

from core_lib.utils import requests_util
from core_lib.utils.log_util import log_info
from core_lib.utils.requests_util import TIMEOUT


def send_cfn_response(
    event,
    context,
    response_status,
    response_data,
    physical_resource_id=None,
    no_echo=False,
):
    response_url = event.get("ResponseURL")

    if not response_url:
        log_info(
            "Attempt to respond to CloudFormation failed: No ResponseURL present in event."
        )
        return

    if not physical_resource_id:
        physical_resource_id = context.log_stream_name

    response_body = json.dumps(
        {
            "Status": response_status,
            "Reason": f"See the details in CloudWatch Log Stream: {context.log_stream_name}",
            "PhysicalResourceId": physical_resource_id,
            "StackId": event["StackId"],
            "RequestId": event["RequestId"],
            "LogicalResourceId": event["LogicalResourceId"],
            "NoEcho": no_echo,
            "Data": response_data,
        }
    )

    headers = {"Content-Type": "", "Content-Length": str(len(response_body))}

    try:
        response = requests_util.put(
            response_url, data=response_body, headers=headers, timeout=TIMEOUT
        )
        print(f"Status code: {response.reason}")
    except Exception as e:
        print(f"Failed to send the response to the provided URL: {e}")
