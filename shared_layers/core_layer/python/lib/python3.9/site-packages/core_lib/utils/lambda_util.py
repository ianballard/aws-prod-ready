from threading import current_thread
from core_lib.utils.log_util import log_info

def lambda_handler():

    def decorator(func):
        def wrapper(event, context):

            log_info(event)

            current_thread().__setattr__('event', event)
            current_thread().__setattr__('context', context)

            return func(
                event
            )

        return wrapper

    return decorator


def get_lambda_event():
    try:
        return current_thread().__getattribute__('event')
    except AttributeError:
       return None

def get_lambda_context():
    try:
        return current_thread().__getattribute__('context')
    except AttributeError:
       return None