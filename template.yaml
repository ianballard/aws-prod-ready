AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Main Stack

Parameters:
  stage:
    Description: "Stage"
    Type: String
  backupRegion:
    Description: "Backup Region"
    Type: String
  dbTableName:
    Description: "Table Name"
    Type: String

Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"

  PrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      VpcId: !Ref VPC

  PrivateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      VpcId: !Ref VPC

  PrivateSubnet3:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.4.0/24"
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "VPC Security Group"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/16
          Description: Local HTTPS Traffic

  CoreLibraryLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: core-library-layer
      Description: Core library for project.
      ContentUri: shared_layers/core_layer
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Delete

  ApiLibraryLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: api-library-layer
      Description: Api library for project.
      ContentUri: api/layers/api_layer
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Delete

  SSMParameterReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: ssm-parameter-read-access
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"

  VPCAdditionsStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: template.vpc.yaml
      Parameters:
        stage: !Ref stage
        backupRegion: !Ref backupRegion
        vpcId: !Ref VPC
        privateSubnet1: !Ref PrivateSubnet1
        publicSubnet1: !Ref PublicSubnet1

  AuthApiStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: template.api.auth.yaml
      Parameters:
        stage: !Ref stage
        backupRegion: !Ref backupRegion
        coreLayer: !Ref CoreLibraryLayer
        apiLayer: !Ref ApiLibraryLayer
        ssmReadAccessPolicy: !Ref SSMParameterReadAccessPolicy
        securityGroup: !Ref SecurityGroup
        vpcSubnetIds: !Join [ ',', [ !Ref PrivateSubnet1 ] ]  # Comma-separated list of subnet IDs

  UserApiStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: template.api.user.yaml
      Parameters:
        stage: !Ref stage
        backupRegion: !Ref backupRegion
        coreLayer: !Ref CoreLibraryLayer
        apiLayer: !Ref ApiLibraryLayer
        ssmReadAccessPolicy: !Ref SSMParameterReadAccessPolicy
        securityGroup: !Ref SecurityGroup
        vpcSubnetIds: !Join [ ',', [ !Ref PrivateSubnet1 ] ]  # Comma-separated list of subnet IDs

  DBStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: template.db.yaml
      Parameters:
        stage: !Ref stage
        backupRegion: !Ref backupRegion
        dbTableName: !Ref dbTableName

  AuthStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: template.auth.yaml
      Parameters:
        stage: !Ref stage
        backupRegion: !Ref backupRegion

  OpenSearchStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: template.opensearch.yaml
      Parameters:
        stage: !Ref stage
        backupRegion: !Ref backupRegion
