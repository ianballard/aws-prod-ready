import json
import os

from api_lib.response.api_response import (
    ApiResponse,
    set_access_control_allow_origin,
)


def test_api_response_initialization_and_formatting():
    os.environ["CORS_ALLOWED_ORIGINS"] = "https://example.com"
    request_headers = {"Origin": "https://example.com"}
    status_code = 200
    response_body = {"key": "value"}

    api_response = ApiResponse(request_headers, status_code, response_body)

    formatted_response = api_response.format()

    expected_headers = {
        "Access-Control-Allow-Origin": "https://example.com",
        "Access-Control-Allow-Credentials": "true",
        "Access-Control-Allow-Headers": "Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,"
        "X-Access-Token,X-Refresh-Token,",
        "Access-Control-Allow-Methods": "OPTIONS,POST,GET,PATCH,DELETE,PUT",
        "Content-Type": "application/json",
        "strict-transport-security": "max-age=31536000; includeSubdomains; preload",
        "content-security-policy": "frame-ancestors 'self';",
        "x-xss-protection": "1; mode=block",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
    }

    assert formatted_response["statusCode"] == status_code
    assert formatted_response["body"] == json.dumps(response_body, cls=json.JSONEncoder)
    assert formatted_response["headers"] == expected_headers


def test_set_access_control_allow_origin():
    os.environ["CORS_ALLOWED_ORIGINS"] = "https://example.com,https://test.com"

    request_headers = {"Origin": "https://test.com"}
    assert set_access_control_allow_origin(request_headers) == "https://test.com"

    request_headers = {"Origin": "https://invalid.com"}
    assert set_access_control_allow_origin(request_headers) is None

    os.environ["CORS_ALLOWED_ORIGINS"] = "*"
    assert set_access_control_allow_origin(request_headers) == "https://invalid.com"
