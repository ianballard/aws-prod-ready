import json
from unittest.mock import patch, Mock

from api_lib.request.api_request import api, ApiRequest


def test_api_request_initialization():
    event = {
        "headers": {"Content-Type": "application/json"},
        "pathParameters": {"parameter1": "value1"},
        "body": json.dumps({"key1": "value1"}),
        "queryStringParameters": {"query1": "value1"},
    }

    api_request = ApiRequest(event)

    assert api_request.headers == {"Content-Type": "application/json"}
    assert api_request.path_parameters == {"parameter1": "value1"}
    assert api_request.body == {"key1": "value1"}
    assert api_request.query_parameters == {"query1": "value1"}


@patch("api_lib.request.api_request.ApiRequest")
def test_api_decorator(ApiRequestMock):
    func_mock = Mock()
    decorated_func = api()(func_mock)

    event = {
        "headers": {"Content-Type": "application/json"},
        "pathParameters": {"parameter1": "value1"},
        "body": json.dumps({"key1": "value1"}),
        "queryStringParameters": {"query1": "value1"},
    }

    decorated_func(event)

    ApiRequestMock.assert_called_once_with(event)
    func_mock.assert_called_once()
