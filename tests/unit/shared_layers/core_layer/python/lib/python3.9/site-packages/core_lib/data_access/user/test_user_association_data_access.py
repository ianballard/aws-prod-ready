from unittest.mock import patch
from core_lib.data_access.impl.dynamodb.user_association.user_association_dynamodb_repository import (
    UserAssociationDynamoDBRepository,
)
from core_lib.data_access.user.user_association_data_access import (
    query_associated_users,
    associate_users,
    query_associated_users_with_profiles,
)


@patch.object(UserAssociationDynamoDBRepository, "query_associated_users")
def test_query_associated_users(mock_query_associated_users):
    user_a_id = "test_user_a_id"
    user_b_id = "test_user_b_id"
    query_associated_users(user_a_id, user_b_id)
    mock_query_associated_users.assert_called_once_with(user_a_id, user_b_id)


@patch.object(UserAssociationDynamoDBRepository, "create_user_association")
def test_associate_users(mock_create_user_association):
    user_a_id = "test_user_a_id"
    user_b_id = "test_user_b_id"
    associate_users(user_a_id, user_b_id)
    mock_create_user_association.assert_called_once_with(user_a_id, user_b_id)


@patch.object(UserAssociationDynamoDBRepository, "query_associated_users_with_profiles")
def test_query_associated_users_with_profiles(
    mock_query_associated_users_with_profiles,
):
    user_a_id = "test_user_a_id"
    user_b_id = "test_user_b_id"
    query_associated_users_with_profiles(user_a_id, user_b_id)
    mock_query_associated_users_with_profiles.assert_called_once_with(
        user_a_id=user_a_id, user_b_id=user_b_id
    )
