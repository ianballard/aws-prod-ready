from unittest.mock import patch

from core_lib.services.file_storage.impl import s3_service


@patch("core_lib.services.file_storage.impl.s3_service.s3_resource")
def test_upload(mock_s3_resource):
    # Arrange
    bucket_name = "mybucket"
    key = "mykey"
    content = b"mycontent"
    mock_s3_resource.Object.return_value.put.return_value = {
        "ResponseMetadata": {"HTTPStatusCode": 200}
    }

    # Act
    response = s3_service.upload(bucket_name, key, content)

    # Assert
    mock_s3_resource.Object.assert_called_once_with(bucket_name=bucket_name, key=key)
    assert response == {"ResponseMetadata": {"HTTPStatusCode": 200}}


@patch("core_lib.services.file_storage.impl.s3_service.s3_client")
def test_download(mock_s3_client):
    # Arrange
    bucket_name = "mybucket"
    key = "mykey"
    mock_s3_client.get_object.return_value = {"Body": b"mycontent"}

    # Act
    response = s3_service.download(bucket_name, key)

    # Assert
    mock_s3_client.get_object.assert_called_once_with(bucket_name=bucket_name, key=key)
    assert response == {"Body": b"mycontent"}
