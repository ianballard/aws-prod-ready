from unittest.mock import patch

from core_lib.services.secrets.impl.secrets_manager_service import get_secret_value


@patch("core_lib.services.secrets.impl.secrets_manager_service.secrets_manager_client")
def test_get_secret_value(mock_client):
    # Create a mock secret manager client
    mock_client.get_secret_value.return_value = {
        "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3",
        "Name": "MyTestDatabaseSecret",
        "VersionId": "EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE",
        "SecretString": '{"username":"test-user","password":"test-password"}',
        "VersionStages": ["AWSCURRENT"],
        "CreatedDate": 1523477145.713,
    }

    secret_id = "MyTestDatabaseSecret"
    result = get_secret_value(secret_id)

    assert result == {
        "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3",
        "Name": "MyTestDatabaseSecret",
        "VersionId": "EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE",
        "SecretString": '{"username":"test-user","password":"test-password"}',
        "VersionStages": ["AWSCURRENT"],
        "CreatedDate": 1523477145.713,
    }
    mock_client.get_secret_value.assert_called_once_with(SecretId=secret_id)
