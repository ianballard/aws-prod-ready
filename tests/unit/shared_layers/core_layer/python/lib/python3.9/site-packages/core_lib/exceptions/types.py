import pytest
from core_lib.exceptions.types import AppException


def test_app_exception_initialization():
    exception = AppException(message="Test message", code=404, params={"key": "value"})

    assert exception.message == "Test message"
    assert exception.code == 404
    assert exception.params == {"key": "value"}


def test_app_exception_get_code():
    exception = AppException(message="Test message", code=404, params={"key": "value"})

    assert exception.get_code() == 404


def test_app_exception_get_message():
    exception = AppException(message="Test message", code=404, params={"key": "value"})

    assert exception.get_message() == "Test message"


def test_app_exception_string_representation():
    exception = AppException(message="Test message", code=404, params={"key": "value"})

    assert str(exception) == "Test message"


def test_app_exception_raise():
    with pytest.raises(AppException) as excinfo:
        raise AppException("Test message", 404, {"key": "value"})

    assert "Test message" in str(excinfo.value)
    assert excinfo.value.code == 404
    assert excinfo.value.params == {"key": "value"}
