from unittest.mock import MagicMock, patch

import core_lib.services.parameter.parameter_service as ps
from core_lib.services.parameter.parameter_service import ParameterName


@patch("core_lib.services.parameter.parameter_service.PARAMETER_SERVICE_IMPL")
def test_get_parameter_value(mock_service_impl):
    # Mock the get_parameter_value function
    mock_service_impl.get_parameter_value = MagicMock(return_value="test_value")

    # Call the get_parameter_value function
    response = ps.get_parameter_value(ParameterName.USER_POOL_ID)

    # Assert that the get_parameter_value function was called
    mock_service_impl.get_parameter_value.assert_called_once_with(
        parameter_name=ParameterName.USER_POOL_ID, with_decryption=None, region=None
    )

    # Assert the response
    assert response == "test_value"
