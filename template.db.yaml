AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  DB Stack

Parameters:
  stage:
    Description: "Stage"
    Type: String
  backupRegion:
    Description: "Backup Region"
    Type: String
  dbTableName:
    Description: "Table Name"
    Type: String
  enableBackup:
    Description: "Is aws backup enabled (true|false)"
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'

Conditions:
  isBackupEnabled: !Equals [ !Ref enableBackup, 'true' ]

Resources:

  DBTable:
    Type: AWS::DynamoDB::GlobalTable
    Properties:
      TableName: !Sub '${dbTableName}-${stage}'
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: lsi1_sk
          AttributeType: S
        - AttributeName: lsi2_sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      LocalSecondaryIndexes:
        - IndexName: lsi1
          KeySchema:
            - AttributeName: pk
              KeyType: HASH
            - AttributeName: lsi1_sk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: lsi2
          KeySchema:
            - AttributeName: pk
              KeyType: HASH
            - AttributeName: lsi2_sk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      SSESpecification:
        SSEEnabled: true
      Replicas:
        - Region: !Ref AWS::Region
          PointInTimeRecoverySpecification:
            PointInTimeRecoveryEnabled: true
          DeletionProtectionEnabled: true
        - Region: !Ref backupRegion
          PointInTimeRecoverySpecification:
            PointInTimeRecoveryEnabled: true
          DeletionProtectionEnabled: true

  DBTableParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "DB_TABLE"
      Type: "String"
      Value: !Sub '${dbTableName}-${stage}'

  DynamoDBBackupVault:
    Condition: isBackupEnabled
    Type: 'AWS::Backup::BackupVault'
    Properties:
      BackupVaultName:  !Sub "DynamoDBBackupVault-${stage}-${AWS::Region}"

  DynamoDBBackupRole:
    Condition: isBackupEnabled
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: backup.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup

  DynamoDBBackupPlan:
    Condition: isBackupEnabled
    Type: 'AWS::Backup::BackupPlan'
    Properties:
      BackupPlan:
        BackupPlanName: DynamoDBBackupPlan
        BackupPlanRule:
          - RuleName: DynamoDBDailyBackupAndCopy
            TargetBackupVault: !Ref DynamoDBBackupVault
            ScheduleExpression: 'cron(0 0 * * ? *)'  # Daily at 12:00am UTC
            StartWindowMinutes: 60
            CompletionWindowMinutes: 180
            Lifecycle:
              DeleteAfterDays: 60
            CopyActions:
              - DestinationBackupVaultArn: !Sub "arn:aws:backup:${backupRegion}:${AWS::AccountId}:backup-vault:DynamoDBBackupVault-${stage}-${backupRegion}"
                Lifecycle:
                  DeleteAfterDays: 60

  BackupSelection:
    Condition: isBackupEnabled
    Type: 'AWS::Backup::BackupSelection'
    Properties:
      BackupPlanId: !Ref DynamoDBBackupPlan
      BackupSelection:
        SelectionName: DynamoDBTableBackupSelection
        IamRoleArn: !GetAtt DynamoDBBackupRole.Arn
        Resources:
          - !GetAtt DBTable.Arn

Outputs:
  TableArn:
    Value: !GetAtt DBTable.Arn
  TableStreamArn:
    Value: !GetAtt DBTable.StreamArn
